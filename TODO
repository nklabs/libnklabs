P*latform descriptions

nkmcuflash rd and wr.. do 32-bit works, but on stm32 min. size is 8 bytes

Instructions for openocd

Example CLI manual

better abstraction for info command

install git hash of build

abstraction:
  simpler diretory structure?  do we have too many of them?
  maybe have an arch/ directory..

atsamd:
  low power modes?  which is the best clock to use?
  should we be using systick or an atsam timer?
*
rtc:
  better abtraction
  atsamd clock sometimes doesn't start until you read it.. are missing some initialization step?


bootloader:

  We should include an example standard bootloader to show off the ymodem/zmodem firmware udpate

targets:

  Add RISCV
  Add Xilinx
  Add some more ST
  Add some more Atmel

  Some example in an RTOS

testing:

  Need target board with I2C and SPI-flash for this

event driven:

  multi-line gets for dbase
  nkymodem- pause cli input until communication is done

  maybe call sched recursively?

nkymodem

  actual file download test
  write documentation

nkdbase:

  more generic way to deal with crc checking: the infile_t and outfile_t could be used for
  other things

  more tests..
  try all input number formats, including negatives..

  make sure skipping works..

  should error output be an argument instead of nkstderr?  Better for threads

  Finish schema compiler

Nkscan:

  iscan ignores case and squashes case on word and identifier.  Maybe word/identifier should be individually controllable?
  maybe case ignore should be changable in the format string?

  need tests for iscan

  Expression parser for nkscan?  Allow 0x before decimal?

  Some kind of options parser where we don't care about order- we can build this externally
    while tryopt1 || tryopt2 || tryopt3 || tryopt4

  Always allow whitespace before end of string?  Always allow whitespace before start of conversion?
  Do not ignore whitespace before doubles? (but strtod does this to match C-library standard).

  Versions of nkscan and friends which take a C-string, like sscanf?

  Also vs. sscanf:
    sscanf has character classes
    sscanf automatically skips whitespace before conversions (except for a few special cases)
    sscanf '*' modifier scans but doesn't save result

Get rid of global arrays:

  instead have a wrapper function with the array on the stack which calls the underlying function

Naming:

  nkinfile_t vs. nk_infile_t  type name
  nkdbase vs. nk_dbase        file name

nkinfile:

  How do we handle read errors for nkinfile operations?  Maybe use ssize_t
for block_read..

Notes:

  It seems like a nice idea to use non-standard format sequences in nk_printf-
  but we can not if we also want gcc's built-in format string checking to work.  Therefore we
  have other printing functions:

	nk_indent
	nk_byte_hex_dump
	nk_dbase_fprint

        nkprintf / nkscan:

          Print not just a C-string, but also from an nkinfile

          But this then means that print depends on nkinfile...
          Likewise: Save output to an nkoutfile, not just to a C-string
